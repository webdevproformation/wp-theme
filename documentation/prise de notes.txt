Wordpress => codage de théme

url : https://formation.webdevpro.net/wordpress-dev/
login : wp
mdp : wp

1 ne pas mettre d'adresse dans Google, directement dans 
la barre d'adresse du navigateur

2 saisir les login et mot de passe en minuscule 

-----------------------

ouvrir un github pour partager le code
(sera ouvert par la suite)

pas encore ouvert le github => je donne l'adresse
pour aprés la pause de 10h

-----------------------

Objectif => rentrer dans les détails dans Wordpress
comment wordpress gére la partie Front du site internet
voir des fonctions de Worpdress qui permettre de récupérer
des informations qui ont été saisie dans le Back Office

-----------------------

=> vous avez eu une formation sur WP


Le chapitre 1 et 2 quelques rappels pour voir :
- qu'est ce que wordpress ?
- install wordpress ???
- utilisation du back office 

=> la création de théme !

-----------------------

Support est dispo é l'adresse suivante :

https://formation.webdevpro.net/wordpress-dev/
login : wp
mdp : wp


-----------------------

Est ce que vous avez un hébergement ?

=> dorando
=> jury devoir présenter un site internet
EN LIGNE (sur internet)

Acheter (é tes frais)
=> nom de domaine => mon-super-site.fr
=> hébergement => ordinateur allumé 24h/24 7j/7


Doranco a négocié auprés d'une société => phpnet.org
forfait spécial pour 15 é / an TTC (paie 1 seule fois / année)

https://www.phpnet.org/pack-etudiant.php
code DORANCO20


=> maximum 1 heure => hébergement + domaine opérationnel


-------------------

Mettre en ligne 
=> Menu Dashboard phpnet.org => générer la mise en ligne
	créer une bdd
	générer https
	modifier tes mots de passes
	créer des boitemails
	créer des sous domaines

	=> symfony 
	=> (invite de commande => composant / bundle)
	=> invite de commande EN LIGNE => ssh 
	=> https://openclassrooms.com/fr/courses/3619856-developpez-votre-site-web-avec-le-framework-symfony/3626076-utiliser-la-console-directement-depuis-le-navigateur
	=> https://openclassrooms.com/fr/courses/3619856-developpez-votre-site-web-avec-le-framework-symfony/3626249-deployer-son-site-symfony-en-production

=> logiciel FileZilla 

cas pratique d'un
Mise en ligne !

quelquesoit la technologie que vous allez choisir

OBLIGATOIRE

=> hébergement + domaine
=> Filezilla

html css javascript => OBLIGATOIRE

wordpress => OBLIGATOIRE + mettre en place une base de données
	sur hébergeur

symfony => OBLIGATOIRE + base de données + module créer une 
	invite de commande via le navigateur

react => OBLIGATOIRE (build é mettre sur votre hébergeur) 

--------------------------

=> début aprés midi demain 
html / css
wordpress 

--------------------------

installer wordpress en local 

=> dans le chapitre 2 
https://formation.webdevpro.net/wordpress-dev/01-install-local.html

?? Windows => WAMP / XAMPP /EasyPHP
(vous ne pouvez pas démarrer WAMP et XAMPP simultanément
c'est soit l'un soit l'autre)

?? MacOS => MAMP

Si c'est déjé installé 

Démarrer votre serveur local 
Démarrer les services MySQL / Apache

--------------------------

préparer l'installation de wordpress sur mon serveur local

windows => http://localhost/phpmyadmin/ (phpmyadmin)
macos => http://localhost:8888/phpmyadmin/ (phpmyadmin)

---------------------

pour fonctionner wordpress EXIGE une base de données
via phpmyadmin nous allons créer une base de données + user 

Créer une base de données vide

nom de la base de données : theme
encode : utf8mb4_general_ci

créer un compte utilisateur qui va accéder 
exclusivement é la base de données theme

sélectionné sur le base theme > Priviléges > 
cliquer sur le lien Ajouter un compte utilisateur

login : theme
host : localhost
mdp : azerty1234!

systéme informatique

Windows / LInux / Mac

=> créer des fichiers 
=> identifié 
=> droit => peut voir / modifier
supprimer (privilége)
=> droit => intrerdire 
de faire des actions

Base de données == systéme 
informatique


1 projet = 1 bbd = 1 user dédié

ne pas utiliser utilisateur root
administrateur systéme

=> critique lorsque l'on parle
de 
SECURITE 


------------------------

télécharger les sources de wordpress et les dézipper et les 
mettre dans un 

windows => c:\xampp\htdocs => 

créer une bdd + user 
télécharger et installé wp sur le c:\xampp\htdocs

lancer l'installation

windows : http://localhost/theme
MacOS : http://localhost:8888/theme

----------------------

git push (envoyer le travail sur github)
git clone (importer le travail)

nous avons fini d'installer wordpress


login administrateur du site :admin
mdp  administrateur du site : admin

mettre les mains DANS le code

é ne pas confondre avec profil de connexion é la base 
de données

login : theme
mdp : azerty1234!
host : localhost

=> regarder comment word est fait 

Aller dans ce dossier
windows => dossier c:\xampp\htdocs\theme
macos => dossier /Applications/MAMP/htdocs/theme

le visualiser via Visual Studio Code

architecture => comment les développeurs organisent
leurs fichiers 

3 dossiers principaux
wp-admin => l'ensemble de fichiers qui permettent
de faire fonctionner le back office de WP
=> pas modifier le code source dans ce fichier
wp-content
	=> dans ce fichier que nous allons passer 
	=> 99.999% de notre temps
	=> lorsque l'on veut créer un théme
wp-includes
	=> librairies ( => vendor dans symfony )
	=> react (node_modules)
	=> dossier qui contient toutes 
	=> librairies qui permettent de faire fonctionner
	=> wp 
	=> pas le modifier
	=> créer des thémes appeler des fonctions de wp
	=> stockée dans wp-includes

fichier php é la racine du projet 

wp-config.php => 

en PHP : (connexion é une base de donnée via PDO)
identifiant pour se connecter à la bdd 

---------------------------

BO de votre wp > Apparence > thèmes 

dans le dossier wp-content/themes

créer un nouveau dossier => starter
mettre le nom que vous voulez 
espace / caratères accentués

dans le dossier starter	:
	index.php => page par défaut de notre thème
		<h1>Hello World !</h1>
	
	style.css 
	/*
		Theme Name: starter
	*/

=> une fois que l'on a créer les fichiers de base 
=> ACTIVER le theme starter que l'on vient de créer 


=> si vous modifier le contenu du fichier
index.php 

essayer des balises html p , modifier le contenu de 
la balise h1

une page html qui se respecte

<!DOCTYPE html>
<html lang="en">
<head>
	...
</head>
<body>
	.... => ici que l'on doit voir ce qui est écrit dans index.php
</body>
</html>

ajouter le head et la fin de page dans  

<?php get_header() ?> => function de wordpress 

<?php get_footer() ?> => function de wordpress

ils sont générés par défaut par wordpress !

nous allons vouloir avoir une maitrise sur 
le contenu de la partie head de notre site 

mais aussi maitrise de la partie pied de page 
de notre site

=> je veux installer bootstrap 

<link href="url de la librairie .." > 

dans le dossier starter 

créer le fichier header.php 

ce fichier qui sera appelé par la fonction get_header() 
dans le fichier index.php 

----------------------

git => versionning => garder des versions de notre code source
sans avoir copier des dossiers 
aujourd'hui
demain
après
=> un seul endroit => dans le dossier .git

avant de lancer le versionning 
créer un fichier .gitignore => créer à la main 

?? fichier permet de restreindre le partage == 
jamais je ne vais modifier le contenu des dossiers suivants :
wp-admin 
wp-includes 

je te liste ce que je veux partager 
dans .gitignore on dit ce que l'on ne veut pas et met des exceptions

----------------------------

modifier le pied de page de notre site wp 

get_footer() => appeler le pied page de notre site 

dans le dossier starter nous allons un nouveau fichier 

footer.php 

</body>
</html>

appeler le fichier index.php 
	get_header() => charger le fichier header.php 

	votre html

	get_footer() => charger le fichier footer.php 

get_header() et get_footer() sont des fonctions de wordpress 

en PHP == require() à la sauce wordpress

---------------------

lorsque l'on est connecté au back office 

=> il y a une bande noire qui est affichée en haut de vos pages dans le front 
=> barre des raccourcis 


http://localhost/theme/wp-admin/

POur que le theme => starter fonctionne il faut l'activer dans le back office 

dans le fichier header.php => <?php wp_head() ?> avant 
la balise fermante </head> 

dans le fichier footer.php => <?php wp_footer() ?> 
avant la balise fermante </body>

-----------------------------

essayer ensemble de faire un petit site internet :

arborescence => la liste des pages de notre site 

Accueil 
Présentation 
Contact 

=> barre de menu 


-----------------------------

je viens de finir de coder ma barre de menu 

=> rendre dynamique ??? 

=> récupérer des contenus qui ont été créé dans le back office

=> 1ère élément à récupérer => vrai nom de mon site  
=> back office > Réglages > Générale

afficher dans le barre de menu le texte qui est écrire dans le champ titre du site 

<?php bloginfo("name") ?>  => liaison entre le bo et fo

=> dans site qui central pour savoir coder sur wordpress 

codex wordpress => https://wordpress.org/support/
Codex => Léonard de Vinci carnet de note le Codex 

la fonction wp bloginfo()

permet de récupérer des informations qui sont enresgistrés
dans le menu du BO => Réglages > Général 

---------------------------

créer deux pages dans le back office => 

contact 

présentation 

liaison entre la page contact dans le back office avec le lien 
dans le fron office 

=> 1 ajouter le lien dans la barre de menu 

url de la page d'accueil => bloginfo("url") ;

url d'une page particulière dans mon site 

get_page_link() => permet de récupérer l'url d'une page créée dans le bo 
=> get_page_link(7) (le numéro de la page est dans l'url)
=> url de la page contact 

=> get_page_link(5) => url de la page de présentation  

modifier mon fichier index.php => remplacer les # par cette fonction 

menu est dynamique => correspond bien à ce que l'on fait comme actions
dans le back office

=> 2 associer à chaque page un template 

nouvelles page pour fichier de thème  (dans le dossier starter)

tpl-contact.php 

tpl-presentation.php 



-----------

=> récupérer le menu 


-------------------

Cas pratique :

1 Dans le backoffice créer une nouvelle page => Information 
	titre Information
	contenu un peu de texte ...

2 ajouter un lien dans la barre de menu pointer vers la page Information 

3 créer un template utilisé uniquement pour la page information 

a appeler le header et le footer 
b afficher le texte suivant 
c Toutes les informations sur mon activité de développeur 

4 associer ce template à la page information dans le back office  

Theme = somme de template 
index.php => 
header.php
footer.php partie de template 
tpl-contact.php 

=> dynamique => mais c'est pas mal !!!!

=> rendre le menu 100% dynamique !! 

----------------------------------

=> Loop (boucle wordpress) 

1 connexion à la BDD via PDO 
en PHP => fonction requête dans la base de données

si je suis sur la page n° 9 => requête SQL 

2 SELECT titre , contenu , auteur FROM articles WHERE id = 9 

=> résultat =>  tableau php

3 $resultat = [
	"titre" => "Information" ,
	"contenu" => "un peu de texte ...",
	"auteur" => "Malik"
];

4 <h1><?php echo $resultat["titre"] ?></h1>
<p><?php  echo $resultat["contenu"] ?></p>
<ul>
	<li><?php echo $resultat["auteur"] ?></li>
</ul>

--- équivalent dans WP ---

pas besoin de faire la partie connexion / partie requête 

have_posts()
the_post()

=> boucle Wordpress

deux fonctions wordpress => connexion à la base de données / requête / résultat

il nous reste 1 étape important => insérer les informations dans du html !!!

=> dans le fichier tpl-information.php

-------------------


Cas pratique
dans le template tpl-contact.php 

lancer une boucle wp 

récupérer le titre de la page

ainsi que son contenu

-------------------

comme vous le savez certainement 
wordpress dispose d'un système interne pour générer des menus 

nous avons fait c'est créer la barre de menu 

=> système interne de wordpress pour créer des menus 

2 étapes :

Etape 1 => créer un nouveau fichier 
 functions.php

 fichiers de template mais qui n'est pas affiché à l'écran !!! 

 ce fichier va permettre de stocker des fonctions centrales de notre thème 

 ce fichier est exécuté AVANT l'exécution de nos fichiers de templates 

dans ce fichier 

register_nav_menu([
    "theme_location" => "top"
]);



---------------------

Applications mobiles

=> Langages dédiés : 
C++ SWIFT JAVA KOTLIN 

Framework : 
React 
React Native / Ionic / .... Wordpress plugin en App Mobile 

https://programmation.developpez.com/actu/291204/Quels-sont-les-meilleurs-langages-de-programmation-pour-developper-une-application-mobile-Petit-tour-d-horizon-sur-les-plus-populaires/


Javascript => React Native (traduction)

Android => (Java)
Mac OS => SWIFT

------------------------------

https://formation.webdevpro.net/wordpress-dev/
login : wp 
mdp : wp


------------------------------

canvas => https://www.youtube.com/channel/UCEqc149iR-ALYkGM6TG-7vQ


------------------------------

relancer votre serveur local 

Windows XAMPP
MacOS MAMP

Lancer vos services : Apache et mySQL 

Lancer votre navigateur 
WIndows http://localhost/theme
MacOS http://localhost:8888/theme

accéder au back office 

WIndows http://localhost/theme/wp-login.php
WIndows http://localhost/theme/wp-admin

MacOS http://localhost:8888/theme/wp-login.php
MacOS http://localhost:8888/theme/wp-admin

Compte administrateur :
login : admin
mdp : admin

// le github https://github.com/webdevproformation/wp-theme


------------------------

wp dispose de plein de fonctions pour réaliser rapidement thème 

get_header() get_footer()
wp_head() wp_footer()
bloginfo("name | description | url");
get_page_link(5) => url de page 

boucle 
appelle une page dans wordpress 
wp va généré une requête en bdd 
pour récupérer les données et les afficher 
have_posts()
the_post()
the_title()
the_content()
the_date()
the_author()

dans WP => dispose d'un menu (qu'il faut activer) pour créer des barres de menu facilement 

register_nav_menu("theme_location" , "top");
active le menu dans le back office 

Afficher le menu dans une des parties du thème 
wp_nav_menu(["menu" => "top"  ]);

------

cas pratique  

dans la page information ajouter une barre de menu 
qui va contenir des liens vers les pages suivantes :

- Accueil 
- Politique de confidentialité 

créer une nouvelle nouvelle barre de menu => 
register_nav_menu("theme_location" , "information"); 

mais étant donné que j'ai déjà utilisé cette fonction

register_nav_menus([
	"top" => "Menu Principal",
	"info" => "Menu dédié à la page info"
])

cette ligne de code doit être écrite OBLIGATOIREMENT dans le fichier functions.php 

=> comment mettre en forme la page confidentialité 

-----------------------

Cas pratique

1 Créer une nouvelle page mentions légales ( dans le back office ) + mettre un peu de texte 

2 affiché dans la barre de menu situé dans le pied de page du site 

3 aspect visuel suivant 

<h1>titre de la page </h1> 
hr 
div
	div 
		Contenu 
	div 
		date + nom de l'auteur

-----------------------

important comment coder des thèmes 

=> template hierarchie !

chapitre 3 => template hierarchie > schema 
https://formation.webdevpro.net/wordpress-dev/01-tpl-hierarchy.html

schema => 

schéma central 

wordpress va automatique liaison entre un fichier de thème <=> un type de contenu créé dans le back office

Quel type de contenu peut on créer dans le back office de wordpress ???? 

4 types principaux 
Article 
Page => nous avons surtout créé des Pages 
Catégorie
Etiquette 

En fonction du type de contenu que l'on veut présenter dans le front 

Wordpress va lier un template spécial 

Le schéma que je viens de vous montrer explique quel template va être associé à quel type de contenu 
(template hiérarchie)

page archives => 

page qui fait la liste de tous mes articles => page category.php 

page seule
	Page 
		<?php 
			/*
			Template Name: fpejfpeoijfzeopi
			*/
		?>

		page.php 

	Article 
		single.php ou single-post.php 

Erreur (la page n'existe pas) 404.php 

Page d'accueil => home.php 


----------------------------

créer une nouveau fichier de template 

single.php 

appeler le header et le footer 

afficher le titre             |
le contenu                    |      image la une de l'article
date                          |














































































